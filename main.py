import time

# Функция для измерения времени выполнения другой функции
def measure(f):
    N = 10
    results = []
    # Цикл для выполнения измерений N раз
    for _ in range(N):
        time.sleep(0)  # Приостановка потока для исключения влияния других операций
        start_time = time.process_time_ns()  # Зафиксировать начальное время выполнения блока кода
        f()  # Выполнение целевой функции
        end_time = time.process_time_ns()  # Зафиксировать конечное время выполнения блока кода

        # Вычисление продолжительности выполнения блока кода и добавление в список результатов
        duration = end_time - start_time
        results.append(duration)

    results.sort()  # Сортировка результатов для вычисления медианы
    median_idx = N // 2  # Индекс медианы в отсортированном списке
    median = results[median_idx]  # Вычисление медианы времени выполнения

    return median  # Возврат медианы времени выполнения


# Основная функция программы
def main():
    # Измерение времени на создание и удаление объекта целого числа (нулевой операции)
    overhead = measure(lambda: None)

    # Функция для создания и удаления объекта целого числа
    def delete_integer():
        x = int(1)  # Создание объекта целого числа
        del x  # Удаление объекта

    # Измерение времени на выполнение функции delete_integer без учета "переключения контекста"
    ticks = measure(delete_integer)

    # Вывод результатов измерений времени
    print(f"Тики, затраченные на удаление целочисленного объекта: {ticks - overhead}")


# Точка входа в программу
if __name__ == "__main__":
    main()  # Вызов основной функции при запуске скрипта
